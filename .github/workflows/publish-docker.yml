name: Build and Push Docker Image

on:
  push:
    tags: [ 'v*' ]
  release:
    types: [published]
  workflow_dispatch:
  workflow_run:
    workflows: ["Publish to PyPI"]
    types:
      - completed
    branches: [ main ]

env:
  DOCKERHUB_REGISTRY: docker.io
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_IMAGE: naylence/agent-sdk-python
  GHCR_IMAGE: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Only run if:
    # 1. Manual trigger, tags, or release
    # 2. OR workflow_run trigger AND the PyPI workflow succeeded
    if: |
      github.event_name != 'workflow_run' || 
      github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version from pyproject.toml
      id: get_version
      run: |
        VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKERHUB_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Log in to GitHub Container Registry
    #   uses: docker/login-action@v3
    #   with:
    #     registry: ${{ env.GHCR_REGISTRY }}
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker Hub
      id: meta-dockerhub
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKERHUB_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    # - name: Extract metadata for GHCR
    #   id: meta-ghcr
    #   uses: docker/metadata-action@v5
    #   with:
    #     images: ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE }}
    #     tags: |
    #       type=ref,event=branch
    #       type=ref,event=pr
    #       type=semver,pattern={{version}}
    #       type=semver,pattern={{major}}.{{minor}}
    #       type=semver,pattern={{major}}
    #       type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-dockerhub.outputs.tags }}
        labels: ${{ steps.meta-dockerhub.outputs.labels }}
        build-args: |
          SDK_VERSION=${{ steps.get_version.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ env.DOCKERHUB_IMAGE }}
        readme-filepath: ./README.md
